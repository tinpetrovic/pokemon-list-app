{"version":3,"sources":["images/pokeball-png-45331.png","images/pokeballs.jpg","components/Landing/Landing.jsx","context/FetchContext.js","components/Pages/Pages.jsx","components/Nav/Nav.jsx","styles/cardStyles.jsx","components/PokemonCard/PokemonCard.jsx","components/Main/Main.jsx","components/PokemonInfo/Carousel/PokeCarousel.jsx","components/PokemonInfo/PokemonInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Landing","react_default","a","createElement","className","Card","Body","Title","react_router_dom_dist","to","Image","src","pokeball","Text","FetchContext","createContext","FetchContextProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","pageOffset","setPageOffset","Provider","value","Pages","setPokemonList","_useContext","useContext","_useContext2","Pagination","First","disabled","onClick","Prev","Item","active","Next","Last","Nav","alt","cardStyles","pokemonTypes","types","map","type","push","name","progressVariants","PokemonCard","pokemon","concat","Img","variant","sprites","front_default","index","key","ListGroup","stats","stat","horizontal","ProgressBar","now","base_stat","max","label","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Main","pokemonList","ignore","API","fetchPokemon","asyncToGenerator","_callee2","res","_yield$res$json","results","pokeArray","fetchPokemonData","_context2","fetch","json","_ref2","_callee","array","_res","data","_context","url","_x","apply","arguments","useEffect","Nav_Nav","Spinner","animation","Container","Row","Col","md","lg","PokemonCard_PokemonCard","Pages_Pages","PokeCarousel","console","log","Carousel","back_default","front_shiny","back_shiny","PokemonInfo_regeneratorRuntime","PokemonInfo","pokemonId","useParams","setPokemon","_useState3","_useState4","pokemonMoves","setPokemonMoves","_useState5","start","end","_useState6","movesOffset","setMovesOffset","getPokemonMoves","moves","pokemonMovesArr","getPokemonData","id","Fragment","Carousel_PokeCarousel","move","sm","version_group_details","level_learned_at","Button","App","dist","path","element","Landing_Landing","Main_Main","PokemonInfo_PokemonInfo","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.4c73aff8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball-png-45331.b6d07b13.png\";","module.exports = __webpack_public_path__ + \"static/media/pokeballs.6563d6fb.jpg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Image } from 'react-bootstrap'\r\nimport { pokeball } from '../../images'\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div className='landing-container d-flex justify-content-center align-items-center'>\r\n        <Card className=\"pokeball-wrapper w-75 text-center\">\r\n          <Card.Body className=\"d-flex flex-column justify-content-between align-items-center\">\r\n          <Card.Title className=\"card-title\">Pokemon List App</Card.Title>\r\n          <Link to=\"/pokemon-list-app/pokemon\">\r\n            <Image  className='pokeball-image fluid' src={pokeball} />\r\n          </Link>\r\n            <Card.Text className=\"card-text\">Click Pokeball to Enter!</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Landing","\r\nimport React, { createContext, useState } from \"react\"\r\n\r\nconst FetchContext = createContext()\r\n\r\nfunction FetchContextProvider({children}) {\r\n    const [pageOffset, setPageOffset] = useState(0)\r\n    \r\n    return (\r\n        <FetchContext.Provider value={[pageOffset, setPageOffset]}>\r\n            {children}\r\n        </FetchContext.Provider>\r\n    )\r\n}\r\n\r\nexport {FetchContext, FetchContextProvider}","import React, {useContext} from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { FetchContext } from '../../context/FetchContext'\r\n\r\nfunction Pages({ setPokemonList }) {\r\n    const [pageOffset, setPageOffset] = useContext(FetchContext)\r\n\r\n    const handleNext = () => {\r\n      setPokemonList([])\r\n      setPageOffset(pageOffset + 20)\r\n      if (pageOffset > 150) {\r\n        setPageOffset(131)\r\n      }\r\n    }\r\n\r\n    const handlePrev = () => {\r\n      setPokemonList([]) \r\n      setPageOffset(pageOffset + 20)\r\n      if (pageOffset < 20) {\r\n        setPageOffset(0)\r\n      }\r\n    }\r\n\r\n    const hadleFirst = () => {\r\n      setPokemonList([]) \r\n      setPageOffset(0)\r\n    }\r\n\r\n    const handleLast = () => {\r\n      setPokemonList([]) \r\n      setPageOffset(131)\r\n    }\r\n\r\n  return (\r\n    <Pagination>\r\n      <Pagination.First disabled={pageOffset === 0} onClick={hadleFirst}/>\r\n      <Pagination.Prev disabled={pageOffset === 0} onClick={handlePrev}/>\r\n\r\n      <Pagination.Item active>{1}</Pagination.Item>\r\n\r\n      <Pagination.Next disabled={pageOffset > 150} onClick={handleNext}/>\r\n      <Pagination.Last disabled={pageOffset === 151} onClick={handleLast} />\r\n    </Pagination>\r\n  )\r\n}\r\n\r\nexport default Pages","import React from 'react'\r\nimport { pokeball } from '../../images'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Nav({children, className}) {\r\n  return (\r\n    <nav className={className}>\r\n        <h1>{children}</h1>\r\n        <Link to=\"/\"><img className='nav-image' src={pokeball} alt=\"pokeball\" /></Link>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav","const cardStyles = (pokemonTypes) => { \r\n    const types = []\r\n    pokemonTypes.map(type => types.push(type.type.name))\r\n    return [\r\n    (types[0] === \"grass\" && \"card-pokemon text-success grass\") ||\r\n    (types[0] === \"bug\" && \"card-pokemon text-success grass\") ||\r\n    (types[0] === \"poison\" && \"card-pokemon text-success grass\") ||\r\n    (types[0] === \"fire\" && \"card-pokemon text-danger fire\") ||\r\n    (types[0] === \"water\" && \"card-pokemon text-primary water\") ||\r\n    (types[0] === \"electric\" && \"card-pokemon text-warning electric\") ||\r\n    (types[0] === \"ground\" && \"card-pokemon text-dark ground\") ||\r\n    (types[0] === \"rock\" && \"card-pokemon text-dark ground\") ||\r\n    (types[0] === \"fighting\" && \"card-pokemon text-dark ground\") ||\r\n    (types[0] === \"psychic\" && \"card-pokemon text-dark psychic\") ||\r\n    (types[0] === \"ghost\" && \"card-pokemon text-dark psychic\") ||\r\n    (types[0] === \"normal\" && \"card-pokemon text-dark normal\")\r\n   ]\r\n}\r\n\r\nconst progressVariants = (pokemonTypes) => {\r\n    const types = []\r\n    pokemonTypes.map(type => types.push(type.type.name))\r\n    return (\r\n    (types[0] === \"grass\" && \"success\") ||\r\n    (types[0] === \"bug\" && \"success\") ||\r\n    (types[0] === \"poison\" && \"success\") ||\r\n    (types[0] === \"fire\" && \"danger\") ||\r\n    (types[0] === \"water\" && \"primary\") ||\r\n    (types[0] === \"electric\" && \"warning\") ||\r\n    (types[0] === \"ground\" && \"dark\") ||\r\n    (types[0] === \"rock\" && \"dark\") ||\r\n    (types[0] === \"fighting\" && \"dark\") ||\r\n    (types[0] === \"psychic\" && \"dark\") ||\r\n    (types[0] === \"ghost\" && \"dark\") ||\r\n    (types[0] === \"normal\" && \"secondary\")\r\n    )\r\n}\r\n\r\n   export {cardStyles, progressVariants}","import React from 'react'\r\nimport { Card, ListGroup, ProgressBar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {cardStyles, progressVariants} from '../../styles/cardStyles'\r\n\r\nfunction PokemonCard({pokemon}) {\r\n  return (\r\n    <Link to={`/pokemon-list-app/pokemon/${pokemon.name}`} className=\"card-link w-sm-100 text-dark\">\r\n      <Card className={cardStyles(pokemon.types)}>\r\n        <Card.Img className=\"img\" variant=\"top\" src={pokemon.sprites.front_default} />\r\n        <Card.Body>\r\n          <Card.Title className=\"card-title\">{pokemon.name}</Card.Title>\r\n            <div className='text-secondary'>\r\n              Type: {pokemon.types.map((type, index) => {\r\n                return (\r\n                  <span className=\"text-secondary\" key={index}>{type.type.name} </span>\r\n                )\r\n              })}\r\n              </div>\r\n        </Card.Body>\r\n        \r\n        <ListGroup className=\"list-group-flush\">\r\n          {pokemon.stats.map((stat, index) => {\r\n            return (\r\n              <ListGroup key={index} horizontal >\r\n                <ListGroup.Item className=\"w-50\">{stat.stat.name}</ListGroup.Item>\r\n                <ListGroup.Item className=\"w-50\">\r\n                  <ProgressBar \r\n                  className=\"progress\" \r\n                  now={stat.base_stat} \r\n                  max={160} \r\n                  label={`${stat.base_stat}`}\r\n                  variant={progressVariants(pokemon.types)}\r\n                  />\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            )\r\n          })}\r\n        </ListGroup>\r\n      </Card>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default PokemonCard","import React, {useContext, useEffect, useState} from 'react'\r\nimport Pages from '../Pages/Pages'\r\nimport { FetchContext } from '../../context/FetchContext'\r\nimport Nav from '../Nav/Nav'\r\nimport PokemonCard from '../PokemonCard/PokemonCard'\r\nimport { Col, Container, Row, Spinner } from 'react-bootstrap'\r\n\r\n\r\nfunction Main() {\r\n  const [pageOffset] = useContext(FetchContext)\r\n  const [pokemonList, setPokemonList] = useState([])\r\n  let ignore = false\r\n  \r\n  const API = `https://pokeapi.co/api/v2/pokemon?limit=20&offset=${pageOffset}` \r\n\r\n  const fetchPokemon = async () => {\r\n    const res = await fetch(API)\r\n    const { results } = await res.json()\r\n    let pokeArray = []\r\n\r\n    const fetchPokemonData = async (array) => {\r\n      for(let i = 0; i < array.length; i++) {\r\n        const res = await fetch(array[i].url)\r\n        const data = await res.json()\r\n        pokeArray.push(data)\r\n      }\r\n      setPokemonList(pokeArray)\r\n    }\r\n    if (!ignore) {\r\n      fetchPokemonData(results)\r\n    }  \r\n}\r\n\r\nuseEffect(() => {\r\n  fetchPokemon()\r\n\r\n  return () => {\r\n    ignore = true\r\n  }\r\n}, [pageOffset])\r\n\r\n  return (\r\n    <main>\r\n      <Nav className=\"main-nav\">\r\n        Pokemon Fetch App\r\n      </Nav>  \r\n      { \r\n      pokemonList.length === 0 ?\r\n        <div className=\"spinner-wrapper\">\r\n          <Spinner animation=\"border\" variant=\"primary\" className=\"spinner\"/>\r\n          <p className='large text-primary'>Loading...</p>\r\n        </div>\r\n      :\r\n        <Container>\r\n          <Row>\r\n            {\r\n              pokemonList.map((pokemon, index) => {\r\n                return (\r\n                  <Col \r\n                  key={index} \r\n                  className=\"mb-3\" \r\n                  md=\"6\"\r\n                  lg=\"4\"\r\n                  >\r\n                    <PokemonCard\r\n                    pokemonList={pokemonList}\r\n                    pokemon={pokemon}\r\n                    />\r\n                  </Col>\r\n                  )\r\n              })\r\n            }\r\n            <Pages \r\n            setPokemonList={setPokemonList}\r\n            />\r\n          </Row>\r\n        </Container>\r\n      }\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nconst PokeCarousel = ({pokemon}) => {\r\n    console.log(pokemon)\r\n  return (\r\n    <Carousel className=\"carousel\">\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block\"\r\n            src={pokemon.sprites.front_default}\r\n            alt=\"First slide\"\r\n          />\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block\"\r\n            src={pokemon.sprites.back_default}\r\n            alt=\"Second slide\"\r\n          />\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block\"\r\n            src={pokemon.sprites.front_shiny}\r\n            alt=\"Third slide\"\r\n          />\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block\"\r\n            src={pokemon.sprites.back_shiny}\r\n            alt=\"Third slide\"\r\n          />\r\n        </Carousel.Item>\r\n      </Carousel>\r\n  )\r\n}\r\n\r\nexport default PokeCarousel","import React, { useState, useEffect } from 'react'\r\nimport PokeCarousel from './Carousel/PokeCarousel'\r\nimport { useParams } from 'react-router-dom'\r\nimport Nav from '../Nav/Nav'\r\nimport { cardStyles } from '../../styles/cardStyles'\r\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap'\r\n\r\nfunction PokemonInfo() {\r\n  const { pokemonId } = useParams()\r\n  const [pokemon, setPokemon] = useState({})\r\n  const [pokemonMoves, setPokemonMoves] = useState([])\r\n  const [movesOffset, setMovesOffset] = useState({start:0, end: 20})\r\n  let ignore = false\r\n  \r\n  const getPokemonMoves = (moves) => {\r\n    let pokemonMovesArr = moves && moves.slice(movesOffset.start, movesOffset.end)\r\n    setPokemonMoves(pokemonMovesArr)\r\n  }\r\n  \r\n\r\n\r\n  const getPokemonData = async (id) => {\r\n    const API = `https://pokeapi.co/api/v2/pokemon/${id}` \r\n    const res = await fetch (API)\r\n    const data = await res.json()\r\n    setPokemon(data)\r\n    getPokemonMoves(data.moves)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!ignore) {\r\n      getPokemonData(pokemonId)\r\n    }\r\n    return () => {\r\n      ignore = true\r\n    }\r\n  }, [movesOffset])\r\n\r\n\r\n\r\n  const handleNext = () => {\r\n    if(movesOffset.end < pokemon.moves.length || movesOffset.start < pokemon.moves.length - 20) {\r\n      setPokemonMoves([])\r\n      setMovesOffset({start: movesOffset.start + 20, end: movesOffset.end + 20})\r\n    }\r\n  }\r\n\r\n  const handlePrev = () => {\r\n    if(movesOffset.end >= 40 || movesOffset.start > 20) {\r\n      setPokemonMoves([])\r\n      setMovesOffset({start: movesOffset.start - 20, end: movesOffset.end - 20})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav className={pokemon.types && cardStyles(pokemon.types)}>{pokemon.name}</Nav>\r\n      \r\n      {\r\n          pokemon.sprites && \r\n          <PokeCarousel pokemon={pokemon} />\r\n      }\r\n\r\n      <Container>\r\n        <Row className=\"justify-content-center p-2\">\r\n          <h3 className='text-center mb-3'>Moves <span className='move-count'>{pokemon.moves && pokemon.moves.length}</span></h3>\r\n          {\r\n            pokemonMoves.length !== 0 ?\r\n            pokemonMoves.map((move, i) => {\r\n              return (\r\n                <Col key={i} md={3} sm={12} className={`${cardStyles(pokemon.types)} mb-3 me-2 rounded d-flex flex-md-column justify-content-between`}>\r\n                  <div>Name: <span className='move-name'>{move.move.name}</span></div>\r\n                  <div>\r\n                    Learned at level: {move.version_group_details[0].level_learned_at}\r\n                  </div>\r\n                </Col>\r\n              )\r\n            })\r\n            :\r\n            <div className=\"pokemon-info--spinner-wrapper d-flex justify-content-center align-items-center\">\r\n              <Spinner animation=\"border\" variant=\"primary\" className=\"pokemon-info--spinner me-3\"/>\r\n              <p className='large text-primary'>Loading...</p>\r\n            </div>\r\n          }\r\n        </Row>\r\n        <Row className='flex-row justify-content-center mb-4'>\r\n          <Button className='w-25' variant=\"outline-secondary\" onClick={handlePrev} disabled={movesOffset.start < 20}>Prev</Button>\r\n          <Button className='w-25' variant=\"outline-secondary\" onClick={handleNext} disabled={pokemon.moves && movesOffset.end >= pokemon.moves.length - 20}>Next</Button>\r\n        </Row>\r\n    </Container>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PokemonInfo","import React from 'react';\nimport { Routes, Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles/main.css\"\nimport Landing from './components/Landing/Landing';\nimport Main from './components/Main/Main';\nimport PokemonInfo from './components/PokemonInfo/PokemonInfo';\n\nfunction App() {\n  return (\n    <>\n    <Routes>\n      <Route path=\"/pokemon-list-app/\" element={<Landing />} />\n      <Route path=\"/pokemon-list-app/pokemon\" element={<Main />} />\n      <Route path=\"/pokemon-list-app/pokemon/:pokemonId\" element={<PokemonInfo />} />\n    </Routes>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { FetchContextProvider } from './context/FetchContext';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n\n    <Router>\n      <FetchContextProvider>\n        <App />\n      </FetchContextProvider>\n    </Router>\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}