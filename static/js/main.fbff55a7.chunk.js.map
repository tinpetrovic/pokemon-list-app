{"version":3,"sources":["images/pokeball-png-45331.png","images/pokeballs.jpg","components/Landing/Landing.jsx","context/FetchContext.js","components/Pages/Pages.jsx","context/ThemeContext.js","components/Nav/Nav.jsx","styles/cardStyles.jsx","components/PokemonCard/PokemonCard.jsx","components/Main/Main.jsx","components/PokemonInfo/Carousel/PokeCarousel.jsx","components/PokemonInfo/PokemonInfo.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Landing","react_default","a","createElement","className","Card","Body","Title","react_router_dom_dist","to","Image","src","pokeball","Text","FetchContext","createContext","FetchContextProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","pageOffset","setPageOffset","Provider","value","Pages","setPokemonList","_useContext","useContext","_useContext2","Pagination","First","disabled","onClick","Prev","Next","Last","ThemeContext","ThemeContextProvider","darkTheme","setDarkTheme","Nav","index_esm","cardStyles","pokemonTypes","types","map","type","push","name","progressVariants","PokemonCard","pokemon","concat","Img","variant","sprites","front_default","index","key","ListGroup","stats","stat","horizontal","Item","ProgressBar","now","base_stat","max","label","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Main","_useContext3","pokemonList","ignore","API","fetchPokemon","asyncToGenerator","_callee2","res","_yield$res$json","results","pokeArray","fetchPokemonData","_context2","fetch","json","_ref2","_callee","array","_res","data","_context","url","_x","apply","arguments","useEffect","Nav_Nav","Spinner","animation","Container","Row","Col","md","lg","PokemonCard_PokemonCard","Pages_Pages","PokeCarousel","console","log","Carousel","alt","back_default","front_shiny","back_shiny","PokemonInfo_regeneratorRuntime","PokemonInfo","pokemonId","useParams","setPokemon","_useState3","_useState4","pokemonMoves","setPokemonMoves","_useState5","start","end","_useState6","movesOffset","setMovesOffset","getPokemonMoves","moves","pokemonMovesArr","getPokemonData","id","Carousel_PokeCarousel","move","sm","version_group_details","level_learned_at","Button","App","Fragment","dist","path","element","Landing_Landing","Main_Main","PokemonInfo_PokemonInfo","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6QCqBzBC,MAhBf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sEACXH,EAAAC,EAAAC,cAACE,EAAA,EAAI,CAACD,UAAU,qCACdH,EAAAC,EAAAC,cAACE,EAAA,EAAKC,KAAI,CAACF,UAAU,iEACrBH,EAAAC,EAAAC,cAACE,EAAA,EAAKE,MAAK,CAACH,UAAU,cAAa,oBACnCH,EAAAC,EAAAC,cAACK,EAAA,EAAI,CAACC,GAAG,6BACPR,EAAAC,EAAAC,cAACO,EAAA,EAAK,CAAEN,UAAU,uBAAuBO,IAAKC,OAE9CX,EAAAC,EAAAC,cAACE,EAAA,EAAKQ,KAAI,CAACT,UAAU,aAAY,uDCZvCU,EAAeC,0BAErB,SAASC,EAAoBC,GAAa,IAAXC,EAAQD,EAARC,SAAQC,EACCC,mBAAS,GAAEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAxCK,EAAUH,EAAA,GAAEI,EAAaJ,EAAA,GAEhC,OACIpB,EAAAC,EAAAC,cAACW,EAAaY,SAAQ,CAACC,MAAO,CAACH,EAAYC,IACtCP,GCkCEU,MAvCf,SAAcX,GAAqB,IAAlBY,EAAcZ,EAAdY,eAAcC,EACSC,qBAAWjB,GAAakB,EAAAV,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAArDN,EAAUQ,EAAA,GAAEP,EAAaO,EAAA,GA4BlC,OACE/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAU,KACThC,EAAAC,EAAAC,cAAC8B,EAAA,EAAWC,MAAK,CAACC,SAAyB,IAAfX,EAAkBY,QAZ7B,WACjBP,EAAe,IACfJ,EAAc,KAUqD,SACnExB,EAAAC,EAAAC,cAAC8B,EAAA,EAAWI,KAAI,CAACF,SAAyB,IAAfX,EAAkBY,QArB5B,WACjBP,EAAe,IACfJ,EAAcD,EAAa,IACvBA,EAAa,IACfC,EAAc,KAiBkD,QAClExB,EAAAC,EAAAC,cAAC8B,EAAA,EAAWK,KAAI,CAACH,SAAUX,EAAa,IAAKY,QA9B5B,WACjBP,EAAe,IACfJ,EAAcD,EAAa,IACvBA,EAAa,KACfC,EAAc,OA0BkD,QAClExB,EAAAC,EAAAC,cAAC8B,EAAA,EAAWM,KAAI,CAACJ,SAAyB,MAAfX,EAAoBY,QAV9B,WACjBP,EAAe,IACfJ,EAAc,OAQsD,UCpCpEe,EAAezB,0BAErB,SAAS0B,EAAoBxB,GAAa,IAAXC,EAAQD,EAARC,SAAQC,EACDC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA1CuB,EAASrB,EAAA,GAAEsB,EAAYtB,EAAA,GAE9B,OACIpB,EAAAC,EAAAC,cAACqC,EAAad,SAAQ,CAACC,MAAO,CAACe,EAAWC,IACrCzB,eCQE0B,MAbf,SAAY3B,GAAwB,IAAtBC,EAAQD,EAARC,SAAUd,EAASa,EAATb,UAAS0B,EACGC,qBAAWS,GAAaR,EAAAV,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAnDY,EAASV,EAAA,GAAEW,EAAYX,EAAA,GAE9B,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAWA,GACXH,EAAAC,EAAAC,cAAA,UAAKe,GAEJwB,EAAYzC,EAAAC,EAAAC,cAAC0C,EAAA,EAAa,CAACzC,UAAU,aAAagC,QAAS,kBAAMO,GAAa,MAAa1C,EAAAC,EAAAC,cAAC0C,EAAA,EAAc,CAAGzC,UAAU,aAAagC,QAAS,kBAAMO,GAAa,wBCXpKG,EAAa,SAACC,GAChB,IAAMC,EAAQ,GAEd,OADAD,EAAaE,IAAI,SAAAC,GAAI,OAAIF,EAAMG,KAAKD,EAAKA,KAAKE,QACvC,EACO,UAAbJ,EAAM,GAAkB,kCACX,QAAbA,EAAM,IAAgB,oCACT,WAAbA,EAAM,IAAmB,mCACZ,SAAbA,EAAM,IAAiB,iCACV,UAAbA,EAAM,IAAkB,mCACX,QAAbA,EAAM,IAAgB,mCACT,aAAbA,EAAM,IAAqB,sCACd,WAAbA,EAAM,IAAmB,iCACZ,SAAbA,EAAM,IAAiB,iCACV,aAAbA,EAAM,IAAqB,iCACd,YAAbA,EAAM,IAAoB,kCACb,UAAbA,EAAM,IAAkB,kCACxB,kCAICK,EAAmB,SAACN,GACtB,IAAMC,EAAQ,GAEd,OADAD,EAAaE,IAAI,SAAAC,GAAI,OAAIF,EAAMG,KAAKD,EAAKA,KAAKE,SAEhC,UAAbJ,EAAM,GAAkB,UACX,QAAbA,EAAM,IAAgB,YACT,WAAbA,EAAM,IAAmB,WACZ,SAAbA,EAAM,IAAiB,UACV,UAAbA,EAAM,IAAkB,WACX,aAAbA,EAAM,IAAqB,WACd,WAAbA,EAAM,IAAmB,QACZ,SAAbA,EAAM,IAAiB,QACV,aAAbA,EAAM,IAAqB,QACd,YAAbA,EAAM,IAAoB,QACb,UAAbA,EAAM,IAAkB,QACxB,aCSUM,MAvCf,SAAoBrC,GAAY,IAAVsC,EAAOtC,EAAPsC,QACpB,OACEtD,EAAAC,EAAAC,cAACK,EAAA,EAAI,CAACC,GAAE,6BAAA+C,OAA+BD,EAAQH,MAAQhD,UAAU,gCAC/DH,EAAAC,EAAAC,cAACE,EAAA,EAAI,CAACD,UAAW0C,EAAWS,EAAQP,QAClC/C,EAAAC,EAAAC,cAACE,EAAA,EAAKoD,IAAG,CAACrD,UAAU,MAAMsD,QAAQ,MAAM/C,IAAK4C,EAAQI,QAAQC,gBAC7D3D,EAAAC,EAAAC,cAACE,EAAA,EAAKC,KAAI,KACRL,EAAAC,EAAAC,cAACE,EAAA,EAAKE,MAAK,CAACH,UAAU,cAAcmD,EAAQH,MAC1CnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAiB,SACvBmD,EAAQP,MAAMC,IAAI,SAACC,EAAMW,GAC9B,OACE5D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiB0D,IAAKD,GAAQX,EAAKA,KAAKE,KAAK,SAMvEnD,EAAAC,EAAAC,cAAC4D,EAAA,EAAS,CAAC3D,UAAU,oBAClBmD,EAAQS,MAAMf,IAAI,SAACgB,EAAMJ,GACxB,OACE5D,EAAAC,EAAAC,cAAC4D,EAAA,EAAS,CAACD,IAAKD,EAAOK,YAAU,GAC/BjE,EAAAC,EAAAC,cAAC4D,EAAA,EAAUI,KAAI,CAAC/D,UAAU,QAAQ6D,EAAKA,KAAKb,MAC5CnD,EAAAC,EAAAC,cAAC4D,EAAA,EAAUI,KAAI,CAAC/D,UAAU,QACxBH,EAAAC,EAAAC,cAACiE,EAAA,EAAW,CACZhE,UAAU,WACViE,IAAKJ,EAAKK,UACVC,IAAK,IACLC,MAAK,GAAAhB,OAAKS,EAAKK,WACfZ,QAASL,EAAiBE,EAAQP,8DC/BpDyB,EAAA,kBAAA5E,GAAA,IAAAA,EAAA,GAAA6E,EAAApD,OAAAqD,UAAAC,EAAAF,EAAAG,eAAAC,EAAAxD,OAAAwD,gBAAA,SAAAC,EAAAjB,EAAAkB,GAAAD,EAAAjB,GAAAkB,EAAArD,OAAAsD,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAAjB,EAAAnC,GAAA,OAAAL,OAAAwD,eAAAC,EAAAjB,EAAA,CAAAnC,QAAA+D,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAAjB,GAAA,IAAA2B,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAAjB,EAAAnC,GAAA,OAAAoD,EAAAjB,GAAAnC,GAAA,SAAAmE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAA/E,OAAAgF,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAA1E,MAAA8E,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAA1D,KAAA,SAAA0D,IAAAD,EAAAE,KAAA9B,EAAA6B,IAAA,MAAAf,GAAA,OAAA3C,KAAA,QAAA0D,IAAAf,IAAAhG,EAAAiG,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAA7F,OAAA8F,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA3C,GAAAE,EAAAiC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAArC,UAAAyB,EAAAzB,UAAArD,OAAAgF,OAAAW,GAAA,SAAAO,EAAA7C,GAAA,0BAAA8C,QAAA,SAAAC,GAAAjC,EAAAd,EAAA+C,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,IAAAC,EAAAhD,EAAAoC,KAAA,WAAAvF,MAAA,SAAA+F,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAuB,EAAAjF,KAAA,KAAAkF,EAAAD,EAAAvB,IAAAjF,EAAAyG,EAAAzG,MAAA,OAAAA,GAAA,iBAAAA,GAAAiD,EAAAiC,KAAAlF,EAAA,WAAAkG,EAAAG,QAAArG,EAAA0G,SAAAC,KAAA,SAAA3G,GAAAuG,EAAA,OAAAvG,EAAAqG,EAAAC,IAAA,SAAApC,GAAAqC,EAAA,QAAArC,EAAAmC,EAAAC,KAAAJ,EAAAG,QAAArG,GAAA2G,KAAA,SAAAC,GAAAH,EAAAzG,MAAA4G,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAf,EAAAd,GAAA,iBAAA6B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAd,EAAA,OAAA+B,IAAA,IAAApC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAAgC,EAAArC,EAAAqC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAArC,GAAA,GAAAsC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAtC,EAAAmB,OAAAnB,EAAAwC,KAAAxC,EAAAyC,MAAAzC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAA0C,kBAAA1C,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA2C,OAAA,SAAA3C,EAAAK,KAAA6B,EAAA,gBAAAN,EAAAzB,EAAAX,EAAAE,EAAAM,GAAA,cAAA4B,EAAAjF,KAAA,IAAAuF,EAAAlC,EAAA4C,KAAA,6BAAAhB,EAAAvB,MAAAE,EAAA,gBAAAnF,MAAAwG,EAAAvB,IAAAuC,KAAA5C,EAAA4C,MAAA,UAAAhB,EAAAjF,OAAAuF,EAAA,YAAAlC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAkC,EAAAF,EAAArC,GAAA,IAAA6C,EAAA7C,EAAAmB,SAAAkB,EAAAxD,SAAAgE,GAAA,QAAAC,IAAA3B,EAAA,OAAAnB,EAAAqC,SAAA,eAAAQ,GAAAR,EAAAxD,SAAAkE,SAAA/C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAyC,EAAAP,EAAAF,EAAArC,GAAA,UAAAA,EAAAmB,SAAA,WAAA0B,IAAA7C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA2C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAkB,EAAAxD,SAAAmB,EAAAK,KAAA,aAAAuB,EAAAjF,KAAA,OAAAqD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAqC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAvB,IAAA,OAAA4C,IAAAL,MAAA5C,EAAAqC,EAAAa,YAAAD,EAAA7H,MAAA4E,EAAAmD,KAAAd,EAAAe,QAAA,WAAApD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAyC,GAAA9C,EAAAqC,SAAA,KAAA9B,GAAA0C,GAAAjD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA2C,UAAA,oCAAAhD,EAAAqC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAhH,KAAA2G,GAAA,SAAAM,EAAAN,GAAA,IAAA3B,EAAA2B,EAAAO,YAAA,GAAAlC,EAAAjF,KAAA,gBAAAiF,EAAAvB,IAAAkD,EAAAO,WAAAlC,EAAA,SAAA3B,EAAAN,GAAAgB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA7D,EAAAuB,QAAAmC,EAAA1C,WAAAoD,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA3D,KAAA0D,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAJ,EAAAG,QAAA,GAAA9F,EAAAiC,KAAA0D,EAAAI,GAAA,OAAAjB,EAAA/H,MAAA4I,EAAAI,GAAAjB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA/H,WAAA0H,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAAhH,WAAA0H,EAAAF,MAAA,UAAApC,EAAApC,UAAAqC,EAAAlC,EAAAyC,EAAA,eAAA5F,MAAAqF,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAArF,MAAAoF,EAAApB,cAAA,IAAAoB,EAAA6D,YAAAnF,EAAAuB,EAAAzB,EAAA,qBAAA1F,EAAAgL,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAhE,GAAA,uBAAAgE,EAAAH,aAAAG,EAAA3H,QAAAvD,EAAAoL,KAAA,SAAAH,GAAA,OAAAxJ,OAAA4J,eAAA5J,OAAA4J,eAAAJ,EAAA9D,IAAA8D,EAAAK,UAAAnE,EAAAvB,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAAnG,UAAArD,OAAAgF,OAAAiB,GAAAuD,GAAAjL,EAAAuL,MAAA,SAAAxE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAjD,WAAAc,EAAAmC,EAAAjD,UAAAU,EAAA,kBAAA6B,OAAArH,EAAA+H,gBAAA/H,EAAAwL,MAAA,SAAAtF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAAyD,SAAA,IAAAC,EAAA,IAAA3D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAAhI,EAAAgL,oBAAA7E,GAAAuF,IAAA7B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAAzG,MAAA4J,EAAA7B,UAAAlC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAA1H,EAAA2L,KAAA,SAAAC,GAAA,IAAAC,EAAApK,OAAAmK,GAAAD,EAAA,WAAA1H,KAAA4H,EAAAF,EAAArI,KAAAW,GAAA,OAAA0H,EAAAG,UAAA,SAAAjC,IAAA,KAAA8B,EAAAd,QAAA,KAAA5G,EAAA0H,EAAAI,MAAA,GAAA9H,KAAA4H,EAAA,OAAAhC,EAAA/H,MAAAmC,EAAA4F,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAA7J,EAAAyH,SAAAd,EAAA7B,UAAA,CAAAqG,YAAAxE,EAAA8D,MAAA,SAAAuB,GAAA,GAAA3E,KAAA4E,KAAA,EAAA5E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAN,SAAAyC,EAAAnC,KAAAiD,WAAA1C,QAAA2C,IAAAyB,EAAA,QAAAzI,KAAA8D,KAAA,MAAA9D,EAAA2I,OAAA,IAAAnH,EAAAiC,KAAAK,KAAA9D,KAAAqH,OAAArH,EAAA4I,MAAA,MAAA9E,KAAA9D,QAAAiG,IAAA4C,KAAA,WAAA/E,KAAAiC,MAAA,MAAA+C,EAAAhF,KAAAiD,WAAA,GAAAE,WAAA,aAAA6B,EAAAhJ,KAAA,MAAAgJ,EAAAtF,IAAA,OAAAM,KAAAiF,MAAAlD,kBAAA,SAAAmD,GAAA,GAAAlF,KAAAiC,KAAA,MAAAiD,EAAA,IAAA7F,EAAAW,KAAA,SAAAmF,EAAAC,EAAAC,GAAA,OAAApE,EAAAjF,KAAA,QAAAiF,EAAAvB,IAAAwF,EAAA7F,EAAAmD,KAAA4C,EAAAC,IAAAhG,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAyC,KAAAkD,EAAA,QAAA5B,EAAAzD,KAAAiD,WAAAO,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAb,EAAA5C,KAAAiD,WAAAQ,GAAAxC,EAAA2B,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA7C,KAAA4E,KAAA,KAAAU,EAAA5H,EAAAiC,KAAAiD,EAAA,YAAA2C,EAAA7H,EAAAiC,KAAAiD,EAAA,iBAAA0C,GAAAC,EAAA,IAAAvF,KAAA4E,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA9C,KAAA4E,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAAtF,KAAA4E,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAA/D,MAAA,6CAAAxB,KAAA4E,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAf,OAAA,SAAAhG,EAAA0D,GAAA,QAAA+D,EAAAzD,KAAAiD,WAAAO,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAb,EAAA5C,KAAAiD,WAAAQ,GAAA,GAAAb,EAAAC,QAAA7C,KAAA4E,MAAAlH,EAAAiC,KAAAiD,EAAA,eAAA5C,KAAA4E,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAAxJ,GAAA,aAAAA,IAAAwJ,EAAA3C,QAAAnD,MAAA8F,EAAAzC,aAAAyC,EAAA,UAAAvE,EAAAuE,IAAArC,WAAA,UAAAlC,EAAAjF,OAAAiF,EAAAvB,MAAA8F,GAAAxF,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAgD,EAAAzC,WAAAnD,GAAAI,KAAAyF,SAAAxE,IAAAwE,SAAA,SAAAxE,EAAA+B,GAAA,aAAA/B,EAAAjF,KAAA,MAAAiF,EAAAvB,IAAA,gBAAAuB,EAAAjF,MAAA,aAAAiF,EAAAjF,KAAAgE,KAAAwC,KAAAvB,EAAAvB,IAAA,WAAAuB,EAAAjF,MAAAgE,KAAAiF,KAAAjF,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAjF,MAAAgH,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAA8F,OAAA,SAAA3C,GAAA,QAAAU,EAAAzD,KAAAiD,WAAAO,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAb,EAAA5C,KAAAiD,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA/C,KAAAyF,SAAA7C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAAhD,IAAA+F,MAAA,SAAA9C,GAAA,QAAAY,EAAAzD,KAAAiD,WAAAO,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAb,EAAA5C,KAAAiD,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAO,WAAA,aAAAlC,EAAAjF,KAAA,KAAA4J,EAAA3E,EAAAvB,IAAAwD,EAAAN,GAAA,OAAAgD,GAAA,UAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAd,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAxD,SAAAkC,EAAAiD,GAAAd,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAN,SAAAyC,GAAAvC,IAAAjH,EAiFemN,MAzEf,WAAgB,IAAAlL,EACOC,qBAAWjB,GAAzBU,EAAsCF,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAA5B,GAAAmL,EACGlL,qBAAWS,GAAxBE,EAAqCpB,OAAAC,EAAA,EAAAD,CAAA2L,EAAA,GAA5B,GAAA9L,EACsBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA3C+L,EAAW7L,EAAA,GAAEQ,EAAcR,EAAA,GAC9B8L,GAAS,EACPC,EAAG,qDAAA5J,OAAwDhC,GAE3D6L,EAAY,eAAApM,EAAAK,OAAAgM,EAAA,EAAAhM,CAAAmD,IAAAwG,KAAG,SAAAsC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnJ,IAAAqB,KAAA,SAAA+H,GAAA,cAAAA,EAAA/B,KAAA+B,EAAAnE,MAAA,cAAAmE,EAAAnE,KAAA,EACDoE,MAAMV,GAAI,OAAnB,OAAHI,EAAGK,EAAA9E,KAAA8E,EAAAnE,KAAA,EACiB8D,EAAIO,OAAM,OAAAN,EAAAI,EAAA9E,KAA5B2E,EAAOD,EAAPC,QACJC,EAAY,GACVC,EAAgB,eAAAI,EAAA1M,OAAAgM,EAAA,EAAAhM,CAAAmD,IAAAwG,KAAG,SAAAgD,EAAOC,GAAK,IAAAvD,EAAAwD,EAAAC,EAAA,OAAA3J,IAAAqB,KAAA,SAAAuI,GAAA,cAAAA,EAAAvC,KAAAuC,EAAA3E,MAAA,OAC3BiB,EAAI,EAAC,YAAEA,EAAIuD,EAAMxD,QAAM,CAAA2D,EAAA3E,KAAA,gBAAA2E,EAAA3E,KAAA,EACXoE,MAAMI,EAAMvD,GAAG2D,KAAI,OAA5B,OAAHd,EAAGa,EAAAtF,KAAAsF,EAAA3E,KAAA,EACU8D,EAAIO,OAAM,OAAvBK,EAAIC,EAAAtF,KACV4E,EAAUxK,KAAKiL,GAAK,OAHWzD,IAAG0D,EAAA3E,KAAA,gBAKpC7H,EAAe8L,GAAU,yBAAAU,EAAApC,SAAAgC,MAC1B,gBAPqBM,GAAA,OAAAP,EAAAQ,MAAAtH,KAAAuH,YAAA,GAQjBtB,GACHS,EAAiBF,GAClB,yBAAAG,EAAA5B,SAAAsB,MACJ,kBAfmB,OAAAtM,EAAAuN,MAAAtH,KAAAuH,YAAA,GAyBlB,OARFC,oBAAU,WAGR,OAFArB,IAEO,WACLF,GAAS,IAEV,CAAC3L,IAGAvB,EAAAC,EAAAC,cAAA,QAAMC,UAAWsC,EAAY,qBAAuB,uBAClDzC,EAAAC,EAAAC,cAACwO,EAAG,CAACvO,UAAU,YAAW,qBAIH,IAAvB8M,EAAYxC,OACVzK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACyO,EAAA,EAAO,CAACC,UAAU,SAASnL,QAAQ,UAAUtD,UAAU,YACxDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAqB,eAGpCH,EAAAC,EAAAC,cAAC2O,EAAA,EAAS,KACR7O,EAAAC,EAAAC,cAAC4O,EAAA,EAAG,KAEA7B,EAAYjK,IAAI,SAACM,EAASM,GACxB,OACE5D,EAAAC,EAAAC,cAAC6O,EAAA,EAAG,CACJlL,IAAKD,EACLzD,UAAU,OACV6O,GAAG,IACHC,GAAG,KAEDjP,EAAAC,EAAAC,cAACgP,EAAW,CACZjC,YAAaA,EACb3J,QAASA,OAMjBtD,EAAAC,EAAAC,cAACiP,EAAK,CACNvN,eAAgBA,gBC/BbwN,EAvCM,SAAHpO,GAAkB,IAAbsC,EAAOtC,EAAPsC,QAErB,OADE+L,QAAQC,IAAIhM,GAEZtD,EAAAC,EAAAC,cAACqP,EAAA,EAAQ,CAACpP,UAAU,YAChBH,EAAAC,EAAAC,cAACqP,EAAA,EAASrL,KAAI,KACZlE,EAAAC,EAAAC,cAAA,OACEC,UAAU,UACVO,IAAK4C,EAAQI,QAAQC,cACrB6L,IAAI,iBAIRxP,EAAAC,EAAAC,cAACqP,EAAA,EAASrL,KAAI,KACZlE,EAAAC,EAAAC,cAAA,OACEC,UAAU,UACVO,IAAK4C,EAAQI,QAAQ+L,aACrBD,IAAI,kBAIRxP,EAAAC,EAAAC,cAACqP,EAAA,EAASrL,KAAI,KACZlE,EAAAC,EAAAC,cAAA,OACEC,UAAU,UACVO,IAAK4C,EAAQI,QAAQgM,YACrBF,IAAI,iBAIRxP,EAAAC,EAAAC,cAACqP,EAAA,EAASrL,KAAI,KACZlE,EAAAC,EAAAC,cAAA,OACEC,UAAU,UACVO,IAAK4C,EAAQI,QAAQiM,WACrBH,IAAI,wCClChBI,EAAA,kBAAAhQ,GAAA,IAAAA,EAAA,GAAA6E,EAAApD,OAAAqD,UAAAC,EAAAF,EAAAG,eAAAC,EAAAxD,OAAAwD,gBAAA,SAAAC,EAAAjB,EAAAkB,GAAAD,EAAAjB,GAAAkB,EAAArD,OAAAsD,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAV,EAAAjB,EAAAnC,GAAA,OAAAL,OAAAwD,eAAAC,EAAAjB,EAAA,CAAAnC,QAAA+D,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAb,EAAAjB,GAAA,IAAA2B,EAAA,aAAAI,GAAAJ,EAAA,SAAAV,EAAAjB,EAAAnC,GAAA,OAAAoD,EAAAjB,GAAAnC,GAAA,SAAAmE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAArB,qBAAAyB,EAAAJ,EAAAI,EAAAC,EAAA/E,OAAAgF,OAAAH,EAAAxB,WAAA4B,EAAA,IAAAC,EAAAN,GAAA,WAAApB,EAAAuB,EAAA,WAAA1E,MAAA8E,EAAAV,EAAAE,EAAAM,KAAAF,EAAA,SAAAK,EAAAC,EAAA5B,EAAA6B,GAAA,WAAA1D,KAAA,SAAA0D,IAAAD,EAAAE,KAAA9B,EAAA6B,IAAA,MAAAf,GAAA,OAAA3C,KAAA,QAAA0D,IAAAf,IAAAhG,EAAAiG,OAAA,IAAAgB,EAAA,YAAAV,KAAA,SAAAW,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,EAAA,kBAAA+B,OAAA,IAAAC,EAAA7F,OAAA8F,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA3C,GAAAE,EAAAiC,KAAAQ,EAAAlC,KAAA8B,EAAAI,GAAA,IAAAE,EAAAP,EAAArC,UAAAyB,EAAAzB,UAAArD,OAAAgF,OAAAW,GAAA,SAAAO,EAAA7C,GAAA,0BAAA8C,QAAA,SAAAC,GAAAjC,EAAAd,EAAA+C,EAAA,SAAAd,GAAA,OAAAM,KAAAS,QAAAD,EAAAd,OAAA,SAAAgB,EAAAvB,EAAAwB,GAAA,IAAAC,EAAAhD,EAAAoC,KAAA,WAAAvF,MAAA,SAAA+F,EAAAd,GAAA,SAAAmB,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAR,EAAAd,EAAAoB,EAAAC,GAAA,IAAAE,EAAAzB,EAAAL,EAAAqB,GAAArB,EAAAO,GAAA,aAAAuB,EAAAjF,KAAA,KAAAkF,EAAAD,EAAAvB,IAAAjF,EAAAyG,EAAAzG,MAAA,OAAAA,GAAA,iBAAAA,GAAAiD,EAAAiC,KAAAlF,EAAA,WAAAkG,EAAAG,QAAArG,EAAA0G,SAAAC,KAAA,SAAA3G,GAAAuG,EAAA,OAAAvG,EAAAqG,EAAAC,IAAA,SAAApC,GAAAqC,EAAA,QAAArC,EAAAmC,EAAAC,KAAAJ,EAAAG,QAAArG,GAAA2G,KAAA,SAAAC,GAAAH,EAAAzG,MAAA4G,EAAAP,EAAAI,IAAA,SAAAI,GAAA,OAAAN,EAAA,QAAAM,EAAAR,EAAAC,OAAAE,EAAAvB,KAAAsB,CAAAR,EAAAd,EAAAoB,EAAAC,KAAA,OAAAH,MAAAQ,KAAAP,YAAA,SAAAtB,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAf,EAAAd,GAAA,iBAAA6B,EAAA,UAAAC,MAAA,iDAAAD,EAAA,cAAAf,EAAA,MAAAd,EAAA,OAAA+B,IAAA,IAAApC,EAAAmB,SAAAnB,EAAAK,QAAA,KAAAgC,EAAArC,EAAAqC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAArC,GAAA,GAAAsC,EAAA,IAAAA,IAAA/B,EAAA,gBAAA+B,GAAA,YAAAtC,EAAAmB,OAAAnB,EAAAwC,KAAAxC,EAAAyC,MAAAzC,EAAAK,SAAA,aAAAL,EAAAmB,OAAA,uBAAAe,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAA0C,kBAAA1C,EAAAK,SAAA,WAAAL,EAAAmB,QAAAnB,EAAA2C,OAAA,SAAA3C,EAAAK,KAAA6B,EAAA,gBAAAN,EAAAzB,EAAAX,EAAAE,EAAAM,GAAA,cAAA4B,EAAAjF,KAAA,IAAAuF,EAAAlC,EAAA4C,KAAA,6BAAAhB,EAAAvB,MAAAE,EAAA,gBAAAnF,MAAAwG,EAAAvB,IAAAuC,KAAA5C,EAAA4C,MAAA,UAAAhB,EAAAjF,OAAAuF,EAAA,YAAAlC,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,OAAA,SAAAkC,EAAAF,EAAArC,GAAA,IAAA6C,EAAA7C,EAAAmB,SAAAkB,EAAAxD,SAAAgE,GAAA,QAAAC,IAAA3B,EAAA,OAAAnB,EAAAqC,SAAA,eAAAQ,GAAAR,EAAAxD,SAAAkE,SAAA/C,EAAAmB,OAAA,SAAAnB,EAAAK,SAAAyC,EAAAP,EAAAF,EAAArC,GAAA,UAAAA,EAAAmB,SAAA,WAAA0B,IAAA7C,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA2C,UAAA,oCAAAH,EAAA,aAAAtC,EAAA,IAAAqB,EAAAzB,EAAAgB,EAAAkB,EAAAxD,SAAAmB,EAAAK,KAAA,aAAAuB,EAAAjF,KAAA,OAAAqD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAAuB,EAAAvB,IAAAL,EAAAqC,SAAA,KAAA9B,EAAA,IAAA0C,EAAArB,EAAAvB,IAAA,OAAA4C,IAAAL,MAAA5C,EAAAqC,EAAAa,YAAAD,EAAA7H,MAAA4E,EAAAmD,KAAAd,EAAAe,QAAA,WAAApD,EAAAmB,SAAAnB,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAyC,GAAA9C,EAAAqC,SAAA,KAAA9B,GAAA0C,GAAAjD,EAAAmB,OAAA,QAAAnB,EAAAK,IAAA,IAAA2C,UAAA,oCAAAhD,EAAAqC,SAAA,KAAA9B,GAAA,SAAA8C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAA3C,KAAAiD,WAAAhH,KAAA2G,GAAA,SAAAM,EAAAN,GAAA,IAAA3B,EAAA2B,EAAAO,YAAA,GAAAlC,EAAAjF,KAAA,gBAAAiF,EAAAvB,IAAAkD,EAAAO,WAAAlC,EAAA,SAAA3B,EAAAN,GAAAgB,KAAAiD,WAAA,EAAAJ,OAAA,SAAA7D,EAAAuB,QAAAmC,EAAA1C,WAAAoD,OAAA,YAAAhD,EAAAiD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAA3D,KAAA0D,GAAA,sBAAAA,EAAAb,KAAA,OAAAa,EAAA,IAAAE,MAAAF,EAAAG,QAAA,KAAAC,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAJ,EAAAG,QAAA,GAAA9F,EAAAiC,KAAA0D,EAAAI,GAAA,OAAAjB,EAAA/H,MAAA4I,EAAAI,GAAAjB,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAA/H,WAAA0H,EAAAK,EAAAP,MAAA,EAAAO,GAAA,OAAAA,UAAA,OAAAA,KAAAf,GAAA,SAAAA,IAAA,OAAAhH,WAAA0H,EAAAF,MAAA,UAAApC,EAAApC,UAAAqC,EAAAlC,EAAAyC,EAAA,eAAA5F,MAAAqF,EAAArB,cAAA,IAAAb,EAAAkC,EAAA,eAAArF,MAAAoF,EAAApB,cAAA,IAAAoB,EAAA6D,YAAAnF,EAAAuB,EAAAzB,EAAA,qBAAA1F,EAAAgL,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAAhE,GAAA,uBAAAgE,EAAAH,aAAAG,EAAA3H,QAAAvD,EAAAoL,KAAA,SAAAH,GAAA,OAAAxJ,OAAA4J,eAAA5J,OAAA4J,eAAAJ,EAAA9D,IAAA8D,EAAAK,UAAAnE,EAAAvB,EAAAqF,EAAAvF,EAAA,sBAAAuF,EAAAnG,UAAArD,OAAAgF,OAAAiB,GAAAuD,GAAAjL,EAAAuL,MAAA,SAAAxE,GAAA,OAAAyB,QAAAzB,IAAAY,EAAAI,EAAAjD,WAAAc,EAAAmC,EAAAjD,UAAAU,EAAA,kBAAA6B,OAAArH,EAAA+H,gBAAA/H,EAAAwL,MAAA,SAAAtF,EAAAC,EAAAC,EAAAC,EAAA2B,QAAA,IAAAA,MAAAyD,SAAA,IAAAC,EAAA,IAAA3D,EAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA2B,GAAA,OAAAhI,EAAAgL,oBAAA7E,GAAAuF,IAAA7B,OAAApB,KAAA,SAAAF,GAAA,OAAAA,EAAAe,KAAAf,EAAAzG,MAAA4J,EAAA7B,UAAAlC,EAAAD,GAAA9B,EAAA8B,EAAAhC,EAAA,aAAAE,EAAA8B,EAAApC,EAAA,kBAAA+B,OAAAzB,EAAA8B,EAAA,mDAAA1H,EAAA2L,KAAA,SAAAC,GAAA,IAAAC,EAAApK,OAAAmK,GAAAD,EAAA,WAAA1H,KAAA4H,EAAAF,EAAArI,KAAAW,GAAA,OAAA0H,EAAAG,UAAA,SAAAjC,IAAA,KAAA8B,EAAAd,QAAA,KAAA5G,EAAA0H,EAAAI,MAAA,GAAA9H,KAAA4H,EAAA,OAAAhC,EAAA/H,MAAAmC,EAAA4F,EAAAP,MAAA,EAAAO,EAAA,OAAAA,EAAAP,MAAA,EAAAO,IAAA7J,EAAAyH,SAAAd,EAAA7B,UAAA,CAAAqG,YAAAxE,EAAA8D,MAAA,SAAAuB,GAAA,GAAA3E,KAAA4E,KAAA,EAAA5E,KAAAwC,KAAA,EAAAxC,KAAA6B,KAAA7B,KAAA8B,WAAAK,EAAAnC,KAAAiC,MAAA,EAAAjC,KAAA0B,SAAA,KAAA1B,KAAAQ,OAAA,OAAAR,KAAAN,SAAAyC,EAAAnC,KAAAiD,WAAA1C,QAAA2C,IAAAyB,EAAA,QAAAzI,KAAA8D,KAAA,MAAA9D,EAAA2I,OAAA,IAAAnH,EAAAiC,KAAAK,KAAA9D,KAAAqH,OAAArH,EAAA4I,MAAA,MAAA9E,KAAA9D,QAAAiG,IAAA4C,KAAA,WAAA/E,KAAAiC,MAAA,MAAA+C,EAAAhF,KAAAiD,WAAA,GAAAE,WAAA,aAAA6B,EAAAhJ,KAAA,MAAAgJ,EAAAtF,IAAA,OAAAM,KAAAiF,MAAAlD,kBAAA,SAAAmD,GAAA,GAAAlF,KAAAiC,KAAA,MAAAiD,EAAA,IAAA7F,EAAAW,KAAA,SAAAmF,EAAAC,EAAAC,GAAA,OAAApE,EAAAjF,KAAA,QAAAiF,EAAAvB,IAAAwF,EAAA7F,EAAAmD,KAAA4C,EAAAC,IAAAhG,EAAAmB,OAAA,OAAAnB,EAAAK,SAAAyC,KAAAkD,EAAA,QAAA5B,EAAAzD,KAAAiD,WAAAO,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAb,EAAA5C,KAAAiD,WAAAQ,GAAAxC,EAAA2B,EAAAO,WAAA,YAAAP,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA7C,KAAA4E,KAAA,KAAAU,EAAA5H,EAAAiC,KAAAiD,EAAA,YAAA2C,EAAA7H,EAAAiC,KAAAiD,EAAA,iBAAA0C,GAAAC,EAAA,IAAAvF,KAAA4E,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA9C,KAAA4E,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAAtF,KAAA4E,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAA/D,MAAA,6CAAAxB,KAAA4E,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAf,OAAA,SAAAhG,EAAA0D,GAAA,QAAA+D,EAAAzD,KAAAiD,WAAAO,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAb,EAAA5C,KAAAiD,WAAAQ,GAAA,GAAAb,EAAAC,QAAA7C,KAAA4E,MAAAlH,EAAAiC,KAAAiD,EAAA,eAAA5C,KAAA4E,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAAxJ,GAAA,aAAAA,IAAAwJ,EAAA3C,QAAAnD,MAAA8F,EAAAzC,aAAAyC,EAAA,UAAAvE,EAAAuE,IAAArC,WAAA,UAAAlC,EAAAjF,OAAAiF,EAAAvB,MAAA8F,GAAAxF,KAAAQ,OAAA,OAAAR,KAAAwC,KAAAgD,EAAAzC,WAAAnD,GAAAI,KAAAyF,SAAAxE,IAAAwE,SAAA,SAAAxE,EAAA+B,GAAA,aAAA/B,EAAAjF,KAAA,MAAAiF,EAAAvB,IAAA,gBAAAuB,EAAAjF,MAAA,aAAAiF,EAAAjF,KAAAgE,KAAAwC,KAAAvB,EAAAvB,IAAA,WAAAuB,EAAAjF,MAAAgE,KAAAiF,KAAAjF,KAAAN,IAAAuB,EAAAvB,IAAAM,KAAAQ,OAAA,SAAAR,KAAAwC,KAAA,kBAAAvB,EAAAjF,MAAAgH,IAAAhD,KAAAwC,KAAAQ,GAAApD,GAAA8F,OAAA,SAAA3C,GAAA,QAAAU,EAAAzD,KAAAiD,WAAAO,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAb,EAAA5C,KAAAiD,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA/C,KAAAyF,SAAA7C,EAAAO,WAAAP,EAAAI,UAAAE,EAAAN,GAAAhD,IAAA+F,MAAA,SAAA9C,GAAA,QAAAY,EAAAzD,KAAAiD,WAAAO,OAAA,EAAAC,GAAA,IAAAA,EAAA,KAAAb,EAAA5C,KAAAiD,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAA5B,EAAA2B,EAAAO,WAAA,aAAAlC,EAAAjF,KAAA,KAAA4J,EAAA3E,EAAAvB,IAAAwD,EAAAN,GAAA,OAAAgD,GAAA,UAAApE,MAAA,0BAAAqE,cAAA,SAAAxC,EAAAd,EAAAE,GAAA,OAAAzC,KAAA0B,SAAA,CAAAxD,SAAAkC,EAAAiD,GAAAd,aAAAE,WAAA,SAAAzC,KAAAQ,SAAAR,KAAAN,SAAAyC,GAAAvC,IAAAjH,EAgGeiQ,MAzFf,WAAuB,IACbC,EAAcC,cAAdD,UAAS5O,EACaC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAnCoC,EAAOlC,EAAA,GAAE4O,EAAU5O,EAAA,GAAA6O,EACc9O,mBAAS,IAAG+O,EAAA7O,OAAAC,EAAA,EAAAD,CAAA4O,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAAArO,EAChBC,qBAAWS,GAAxBE,EAAqCpB,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAA5B,GAAAwO,EACsBlP,mBAAS,CAACmP,MAAM,EAAGC,IAAK,KAAIC,EAAAnP,OAAAC,EAAA,EAAAD,CAAAgP,EAAA,GAA3DI,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC9BtD,GAAS,EAEPyD,EAAkB,SAACC,GACvB,IAAIC,EAAkBD,GAASA,EAAM7E,MAAM0E,EAAYH,MAAOG,EAAYF,KAC1EH,EAAgBS,IAKZC,EAAc,eAAA9P,EAAAK,OAAAgM,EAAA,EAAAhM,CAAAuO,IAAA5E,KAAG,SAAAgD,EAAO+C,GAAE,IAAA5D,EAAAI,EAAAY,EAAA,OAAAyB,IAAA/J,KAAA,SAAAuI,GAAA,cAAAA,EAAAvC,KAAAuC,EAAA3E,MAAA,OACqB,OAA7C0D,EAAG,qCAAA5J,OAAwCwN,GAAE3C,EAAA3E,KAAA,EACjCoE,MAAOV,GAAI,OAApB,OAAHI,EAAGa,EAAAtF,KAAAsF,EAAA3E,KAAA,EACU8D,EAAIO,OAAM,OAAvBK,EAAIC,EAAAtF,KACVkH,EAAW7B,GACXwC,EAAgBxC,EAAKyC,OAAM,wBAAAxC,EAAApC,SAAAgC,MAC5B,gBANmBM,GAAA,OAAAtN,EAAAuN,MAAAtH,KAAAuH,YAAA,GAiCpB,OAzBAC,oBAAU,WAIR,OAHIvB,GACF4D,EAAehB,GAEV,WACL5C,GAAS,IAEV,CAACuD,IAmBFzQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWsC,EAAY,qBAAuB,uBACjDzC,EAAAC,EAAAC,cAACwO,EAAG,CAACvO,UAAWmD,EAAQP,OAASF,EAAWS,EAAQP,QAASO,EAAQH,MAGjEG,EAAQI,SACR1D,EAAAC,EAAAC,cAAC8Q,EAAY,CAAC1N,QAASA,IAG3BtD,EAAAC,EAAAC,cAAC2O,EAAA,EAAS,KACR7O,EAAAC,EAAAC,cAAC4O,EAAA,EAAG,CAAC3O,UAAU,8BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAmB,SAAMH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcmD,EAAQsN,OAAStN,EAAQsN,MAAMnG,SAE1E,IAAxB0F,EAAa1F,OACb0F,EAAanN,IAAI,SAACiO,EAAMvG,GACtB,OACE1K,EAAAC,EAAAC,cAAC6O,EAAA,EAAG,CAAClL,IAAK6G,EAAGsE,GAAI,EAAGkC,GAAI,GAAI/Q,UAAS,GAAAoD,OAAKV,EAAWS,EAAQP,OAAM,qEACjE/C,EAAAC,EAAAC,cAAA,WAAK,SAAMF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAa8Q,EAAKA,KAAK9N,OAClDnD,EAAAC,EAAAC,cAAA,WAAK,qBACgB+Q,EAAKE,sBAAsB,GAAGC,qBAMzDpR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kFACbH,EAAAC,EAAAC,cAACyO,EAAA,EAAO,CAACC,UAAU,SAASnL,QAAQ,UAAUtD,UAAU,+BACxDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAqB,gBAIxCH,EAAAC,EAAAC,cAAC4O,EAAA,EAAG,CAAC3O,UAAU,wCACbH,EAAAC,EAAAC,cAACmR,EAAA,EAAM,CAAClR,UAAU,OAAOsD,QAAShB,EAAY,gBAAkB,oBAAqBN,QAvC1E,YACdsO,EAAYF,KAAO,IAAME,EAAYH,MAAQ,MAC9CF,EAAgB,IAChBM,EAAe,CAACJ,MAAOG,EAAYH,MAAQ,GAAIC,IAAKE,EAAYF,IAAM,OAoCwCrO,SAAUuO,EAAYH,MAAQ,IAAI,QAC5ItQ,EAAAC,EAAAC,cAACmR,EAAA,EAAM,CAAClR,UAAU,OAAOsD,QAAShB,EAAY,gBAAkB,oBAAqBN,QA/C1E,YACdsO,EAAYF,IAAMjN,EAAQsN,MAAMnG,QAAUgG,EAAYH,MAAQhN,EAAQsN,MAAMnG,OAAS,MACtF2F,EAAgB,IAChBM,EAAe,CAACJ,MAAOG,EAAYH,MAAQ,GAAIC,IAAKE,EAAYF,IAAM,OA4CwCrO,SAAUoB,EAAQsN,OAASH,EAAYF,KAAOjN,EAAQsN,MAAMnG,OAAS,IAAI,YCrE9K6G,MAZf,WACE,OACEtR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsR,SAAA,KACAvR,EAAAC,EAAAC,cAACsR,EAAA,EAAM,KACLxR,EAAAC,EAAAC,cAACsR,EAAA,EAAK,CAACC,KAAK,qBAAqBC,QAAS1R,EAAAC,EAAAC,cAACyR,EAAO,QAClD3R,EAAAC,EAAAC,cAACsR,EAAA,EAAK,CAACC,KAAK,4BAA4BC,QAAS1R,EAAAC,EAAAC,cAAC0R,EAAI,QACtD5R,EAAAC,EAAAC,cAACsR,EAAA,EAAK,CAACC,KAAK,uCAAuCC,QAAS1R,EAAAC,EAAAC,cAAC2R,EAAW,WCF/DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCnS,EAAAoS,EAAA,GAAA5J,KAAAxI,EAAAqS,KAAA,UAAqB7J,KAAK,SAAArH,GAAiD,IAA9CmR,EAAMnR,EAANmR,OAAQC,EAAMpR,EAANoR,OAAQC,EAAMrR,EAANqR,OAAQC,EAAMtR,EAANsR,OAAQC,EAAOvR,EAAPuR,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCEDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAGD5S,EAAAC,EAAAC,cAACK,EAAA,EAAM,KACLP,EAAAC,EAAAC,cAACsC,EAAoB,KACnBxC,EAAAC,EAAAC,cAACa,EAAoB,KACnBf,EAAAC,EAAAC,cAAC2S,EAAG,UAUdf","file":"static/js/main.fbff55a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokeball-png-45331.b6d07b13.png\";","module.exports = __webpack_public_path__ + \"static/media/pokeballs.6563d6fb.jpg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Image } from 'react-bootstrap'\r\nimport { pokeball } from '../../images'\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div className='landing-container d-flex justify-content-center align-items-center'>\r\n        <Card className=\"pokeball-wrapper w-75 text-center\">\r\n          <Card.Body className=\"d-flex flex-column justify-content-between align-items-center\">\r\n          <Card.Title className=\"card-title\">Pokemon List App</Card.Title>\r\n          <Link to=\"/pokemon-list-app/pokemon\">\r\n            <Image  className='pokeball-image fluid' src={pokeball} />\r\n          </Link>\r\n            <Card.Text className=\"card-text\">Click Pokeball to Enter!</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Landing","import React, { createContext, useState } from \"react\"\r\n\r\nconst FetchContext = createContext()\r\n\r\nfunction FetchContextProvider({children}) {\r\n    const [pageOffset, setPageOffset] = useState(0)\r\n    \r\n    return (\r\n        <FetchContext.Provider value={[pageOffset, setPageOffset]}>\r\n            {children}\r\n        </FetchContext.Provider>\r\n    )\r\n}\r\n\r\nexport {FetchContext, FetchContextProvider}","import React, {useContext} from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { FetchContext } from '../../context/FetchContext'\r\n\r\nfunction Pages({ setPokemonList }) {\r\n    const [pageOffset, setPageOffset] = useContext(FetchContext)\r\n\r\n    const handleNext = () => {\r\n      setPokemonList([])\r\n      setPageOffset(pageOffset + 20)\r\n      if (pageOffset > 150) {\r\n        setPageOffset(131)\r\n      }\r\n    }\r\n\r\n    const handlePrev = () => {\r\n      setPokemonList([]) \r\n      setPageOffset(pageOffset - 20)\r\n      if (pageOffset < 20) {\r\n        setPageOffset(0)\r\n      }\r\n    }\r\n\r\n    const hadleFirst = () => {\r\n      setPokemonList([]) \r\n      setPageOffset(0)\r\n    }\r\n\r\n    const handleLast = () => {\r\n      setPokemonList([]) \r\n      setPageOffset(131)\r\n    }\r\n\r\n  return (\r\n    <Pagination>\r\n      <Pagination.First disabled={pageOffset === 0} onClick={hadleFirst}>First</Pagination.First>\r\n      <Pagination.Prev disabled={pageOffset === 0} onClick={handlePrev}>Prev</Pagination.Prev>\r\n      <Pagination.Next disabled={pageOffset > 130} onClick={handleNext}>Next</Pagination.Next>\r\n      <Pagination.Last disabled={pageOffset === 131} onClick={handleLast}>Last</Pagination.Last>\r\n    </Pagination>\r\n  )\r\n}\r\n\r\nexport default Pages","import React, { createContext, useState } from \"react\"\r\n\r\nconst ThemeContext = createContext()\r\n\r\nfunction ThemeContextProvider({children}) {\r\n    const [darkTheme, setDarkTheme] = useState(false)\r\n    \r\n    return (\r\n        <ThemeContext.Provider value={[darkTheme, setDarkTheme]}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport {ThemeContext, ThemeContextProvider}","import React, { useContext } from 'react'\r\nimport { ThemeContext } from '../../context/ThemeContext'\r\nimport { BsFillSunFill, BsFillMoonFill } from \"react-icons/bs\";\r\n\r\nfunction Nav({children, className}) {\r\n  const [darkTheme, setDarkTheme] = useContext(ThemeContext)\r\n\r\n  return (\r\n    <nav className={className}>\r\n         <h1>{children}</h1>\r\n        {\r\n          darkTheme ? <BsFillSunFill className=\"theme-icon\" onClick={() => setDarkTheme(false)} /> : <BsFillMoonFill   className=\"theme-icon\" onClick={() => setDarkTheme(true)} />\r\n        }\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav","const cardStyles = (pokemonTypes) => { \r\n    const types = []\r\n    pokemonTypes.map(type => types.push(type.type.name))\r\n    return [\r\n    (types[0] === \"grass\" && \"card-pokemon text-success grass\") ||\r\n    (types[0] === \"bug\" && \"card-pokemon text-success grass\") ||\r\n    (types[0] === \"poison\" && \"card-pokemon text-success grass\") ||\r\n    (types[0] === \"fire\" && \"card-pokemon text-danger fire\") ||\r\n    (types[0] === \"water\" && \"card-pokemon text-primary water\") ||\r\n    (types[0] === \"ice\" && \"card-pokemon text-primary water\") ||\r\n    (types[0] === \"electric\" && \"card-pokemon text-warning electric\") ||\r\n    (types[0] === \"ground\" && \"card-pokemon text-dark ground\") ||\r\n    (types[0] === \"rock\" && \"card-pokemon text-dark ground\") ||\r\n    (types[0] === \"fighting\" && \"card-pokemon text-dark ground\") ||\r\n    (types[0] === \"psychic\" && \"card-pokemon text-dark psychic\") ||\r\n    (types[0] === \"ghost\" && \"card-pokemon text-dark psychic\") ||\r\n    (\"card-pokemon text-dark normal\")\r\n   ]\r\n}\r\n\r\nconst progressVariants = (pokemonTypes) => {\r\n    const types = []\r\n    pokemonTypes.map(type => types.push(type.type.name))\r\n    return (\r\n    (types[0] === \"grass\" && \"success\") ||\r\n    (types[0] === \"bug\" && \"success\") ||\r\n    (types[0] === \"poison\" && \"success\") ||\r\n    (types[0] === \"fire\" && \"danger\") ||\r\n    (types[0] === \"water\" && \"primary\") ||\r\n    (types[0] === \"electric\" && \"warning\") ||\r\n    (types[0] === \"ground\" && \"dark\") ||\r\n    (types[0] === \"rock\" && \"dark\") ||\r\n    (types[0] === \"fighting\" && \"dark\") ||\r\n    (types[0] === \"psychic\" && \"dark\") ||\r\n    (types[0] === \"ghost\" && \"dark\") ||\r\n    (\"secondary\")\r\n    )\r\n}\r\n\r\n   export {cardStyles, progressVariants}","import React from 'react'\r\nimport { Card, ListGroup, ProgressBar } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {cardStyles, progressVariants} from '../../styles/cardStyles'\r\n\r\nfunction PokemonCard({pokemon}) {\r\n  return (\r\n    <Link to={`/pokemon-list-app/pokemon/${pokemon.name}`} className=\"card-link w-sm-100 text-dark\">\r\n      <Card className={cardStyles(pokemon.types)}>\r\n        <Card.Img className=\"img\" variant=\"top\" src={pokemon.sprites.front_default} />\r\n        <Card.Body>\r\n          <Card.Title className=\"card-title\">{pokemon.name}</Card.Title>\r\n            <div className='text-secondary'>\r\n              Type: {pokemon.types.map((type, index) => {\r\n                return (\r\n                  <span className=\"text-secondary\" key={index}>{type.type.name} </span>\r\n                )\r\n              })}\r\n              </div>\r\n        </Card.Body>\r\n        \r\n        <ListGroup className=\"list-group-flush\">\r\n          {pokemon.stats.map((stat, index) => {\r\n            return (\r\n              <ListGroup key={index} horizontal >\r\n                <ListGroup.Item className=\"w-50\">{stat.stat.name}</ListGroup.Item>\r\n                <ListGroup.Item className=\"w-50\">\r\n                  <ProgressBar \r\n                  className=\"progress\" \r\n                  now={stat.base_stat} \r\n                  max={160} \r\n                  label={`${stat.base_stat}`}\r\n                  variant={progressVariants(pokemon.types)}\r\n                  />\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            )\r\n          })}\r\n        </ListGroup>\r\n      </Card>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default PokemonCard","import React, {useContext, useEffect, useState} from 'react'\r\nimport Pages from '../Pages/Pages'\r\nimport { FetchContext } from '../../context/FetchContext'\r\nimport { ThemeContext } from '../../context/ThemeContext'\r\nimport Nav from '../Nav/Nav'\r\nimport PokemonCard from '../PokemonCard/PokemonCard'\r\nimport { Col, Container, Row, Spinner } from 'react-bootstrap'\r\n\r\n\r\nfunction Main() {\r\n  const [pageOffset] = useContext(FetchContext)\r\n  const [darkTheme] = useContext(ThemeContext)\r\n  const [pokemonList, setPokemonList] = useState([])\r\n  let ignore = false\r\n  const API = `https://pokeapi.co/api/v2/pokemon?limit=20&offset=${pageOffset}` \r\n\r\n  const fetchPokemon = async () => {\r\n    const res = await fetch(API)\r\n    const { results } = await res.json()\r\n    let pokeArray = []\r\n    const fetchPokemonData = async (array) => {\r\n      for(let i = 0; i < array.length; i++) {\r\n        const res = await fetch(array[i].url)\r\n        const data = await res.json()\r\n        pokeArray.push(data)\r\n      }\r\n      setPokemonList(pokeArray)\r\n    }\r\n    if (!ignore) {\r\n      fetchPokemonData(results)\r\n    }  \r\n}\r\n\r\nuseEffect(() => {\r\n  fetchPokemon()\r\n\r\n  return () => {\r\n    ignore = true\r\n  }\r\n}, [pageOffset])\r\n\r\n  return (\r\n    <main className={darkTheme ? \"bg-dark text-light\" : \"bg-light text-light\"}>\r\n      <Nav className=\"main-nav\">\r\n        Pokemon Fetch App\r\n      </Nav>  \r\n      { \r\n      pokemonList.length === 0 ?\r\n        <div className=\"spinner-wrapper\">\r\n          <Spinner animation=\"border\" variant=\"primary\" className=\"spinner\"/>\r\n          <p className='large text-primary'>Loading...</p>\r\n        </div>\r\n      :\r\n        <Container>\r\n          <Row>\r\n            {\r\n              pokemonList.map((pokemon, index) => {\r\n                return (\r\n                  <Col \r\n                  key={index} \r\n                  className=\"mb-3\" \r\n                  md=\"6\"\r\n                  lg=\"4\"\r\n                  >\r\n                    <PokemonCard\r\n                    pokemonList={pokemonList}\r\n                    pokemon={pokemon}\r\n                    />\r\n                  </Col>\r\n                  )\r\n              })\r\n            }\r\n            <Pages \r\n            setPokemonList={setPokemonList}\r\n            />\r\n          </Row>\r\n        </Container>\r\n      }\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nconst PokeCarousel = ({pokemon}) => {\r\n    console.log(pokemon)\r\n  return (\r\n    <Carousel className=\"carousel\">\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block\"\r\n            src={pokemon.sprites.front_default}\r\n            alt=\"First slide\"\r\n          />\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block\"\r\n            src={pokemon.sprites.back_default}\r\n            alt=\"Second slide\"\r\n          />\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block\"\r\n            src={pokemon.sprites.front_shiny}\r\n            alt=\"Third slide\"\r\n          />\r\n        </Carousel.Item>\r\n\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block\"\r\n            src={pokemon.sprites.back_shiny}\r\n            alt=\"Third slide\"\r\n          />\r\n        </Carousel.Item>\r\n      </Carousel>\r\n  )\r\n}\r\n\r\nexport default PokeCarousel","import React, { useState, useEffect, useContext } from 'react'\r\nimport PokeCarousel from './Carousel/PokeCarousel'\r\nimport { useParams } from 'react-router-dom'\r\nimport Nav from '../Nav/Nav'\r\nimport { cardStyles } from '../../styles/cardStyles'\r\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap'\r\nimport { ThemeContext } from '../../context/ThemeContext'\r\n\r\nfunction PokemonInfo() {\r\n  const { pokemonId } = useParams()\r\n  const [pokemon, setPokemon] = useState({})\r\n  const [pokemonMoves, setPokemonMoves] = useState([])\r\n  const [darkTheme] = useContext(ThemeContext)\r\n  const [movesOffset, setMovesOffset] = useState({start:0, end: 20})\r\n  let ignore = false\r\n  \r\n  const getPokemonMoves = (moves) => {\r\n    let pokemonMovesArr = moves && moves.slice(movesOffset.start, movesOffset.end)\r\n    setPokemonMoves(pokemonMovesArr)\r\n  }\r\n  \r\n\r\n\r\n  const getPokemonData = async (id) => {\r\n    const API = `https://pokeapi.co/api/v2/pokemon/${id}` \r\n    const res = await fetch (API)\r\n    const data = await res.json()\r\n    setPokemon(data)\r\n    getPokemonMoves(data.moves)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!ignore) {\r\n      getPokemonData(pokemonId)\r\n    }\r\n    return () => {\r\n      ignore = true\r\n    }\r\n  }, [movesOffset])\r\n\r\n\r\n\r\n  const handleNext = () => {\r\n    if(movesOffset.end < pokemon.moves.length || movesOffset.start < pokemon.moves.length - 20) {\r\n      setPokemonMoves([])\r\n      setMovesOffset({start: movesOffset.start + 20, end: movesOffset.end + 20})\r\n    }\r\n  }\r\n\r\n  const handlePrev = () => {\r\n    if(movesOffset.end >= 40 || movesOffset.start > 20) {\r\n      setPokemonMoves([])\r\n      setMovesOffset({start: movesOffset.start - 20, end: movesOffset.end - 20})\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={darkTheme ? \"bg-dark text-light\" : \"bg-light text-light\"}>\r\n      <Nav className={pokemon.types && cardStyles(pokemon.types)}>{pokemon.name}</Nav>\r\n      \r\n      {\r\n          pokemon.sprites && \r\n          <PokeCarousel pokemon={pokemon} />\r\n      }\r\n\r\n      <Container>\r\n        <Row className=\"justify-content-center p-2\">\r\n          <h3 className='text-center mb-3'>Moves <span className='move-count'>{pokemon.moves && pokemon.moves.length}</span></h3>\r\n          {\r\n            pokemonMoves.length !== 0 ?\r\n            pokemonMoves.map((move, i) => {\r\n              return (\r\n                <Col key={i} md={3} sm={12} className={`${cardStyles(pokemon.types)} mb-3 me-2 rounded d-flex flex-md-column justify-content-between`}>\r\n                  <div>Name: <span className='move-name'>{move.move.name}</span></div>\r\n                  <div>\r\n                    Learned at level: {move.version_group_details[0].level_learned_at}\r\n                  </div>\r\n                </Col>\r\n              )\r\n            })\r\n            :\r\n            <div className=\"pokemon-info--spinner-wrapper d-flex justify-content-center align-items-center\">\r\n              <Spinner animation=\"border\" variant=\"primary\" className=\"pokemon-info--spinner me-3\"/>\r\n              <p className='large text-primary'>Loading...</p>\r\n            </div>\r\n          }\r\n        </Row>\r\n        <Row className='flex-row justify-content-center mb-4'>\r\n          <Button className='w-25' variant={darkTheme ? \"outline-light\" : \"outline-secondary\"} onClick={handlePrev} disabled={movesOffset.start < 20}>Prev</Button>\r\n          <Button className='w-25' variant={darkTheme ? \"outline-light\" : \"outline-secondary\"} onClick={handleNext} disabled={pokemon.moves && movesOffset.end >= pokemon.moves.length - 20}>Next</Button>\r\n        </Row>\r\n    </Container>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PokemonInfo","import React from 'react';\r\nimport { Routes, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./styles/main.css\"\r\nimport Landing from './components/Landing/Landing';\r\nimport Main from './components/Main/Main';\r\nimport PokemonInfo from './components/PokemonInfo/PokemonInfo';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Routes>\r\n      <Route path=\"/pokemon-list-app/\" element={<Landing />} />\r\n      <Route path=\"/pokemon-list-app/pokemon\" element={<Main />} />\r\n      <Route path=\"/pokemon-list-app/pokemon/:pokemonId\" element={<PokemonInfo />} />\r\n    </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { FetchContextProvider } from './context/FetchContext';\r\nimport { ThemeContextProvider } from './context/ThemeContext';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  \r\n\r\n    <Router>\r\n      <ThemeContextProvider>\r\n        <FetchContextProvider>\r\n          <App />\r\n        </FetchContextProvider>\r\n      </ThemeContextProvider>\r\n    </Router>\r\n\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}